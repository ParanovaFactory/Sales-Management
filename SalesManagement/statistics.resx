<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>
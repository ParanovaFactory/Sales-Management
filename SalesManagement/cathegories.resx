<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fgKAc73qrEf5xgAAAABJRU5ErkJggg==
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
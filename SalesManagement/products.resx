<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>